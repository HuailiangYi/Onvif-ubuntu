/* WebDisplayBindingService.cpp
   Generated by gSOAP 2.8.15 from web.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "WebDisplayBindingService.h"

DisplayBindingService::DisplayBindingService()
{	this->soap = soap_new();
	this->own = true;
	DisplayBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

DisplayBindingService::DisplayBindingService(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	DisplayBindingService_init(_soap->imode, _soap->omode);
}

DisplayBindingService::DisplayBindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	DisplayBindingService_init(iomode, iomode);
}

DisplayBindingService::DisplayBindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	DisplayBindingService_init(imode, omode);
}

DisplayBindingService::~DisplayBindingService()
{	if (this->own)
		soap_free(this->soap);
}

void DisplayBindingService::DisplayBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"xmime", "http://www.w3.org/2005/05/xmlmime", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"dn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
	{"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
	{"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
	{"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
	{"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
	{"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
	{"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
	{"wsa", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL, NULL},
	{"wsd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
};

void DisplayBindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void DisplayBindingService::reset()
{	destroy();
	soap_done(this->soap);
	soap_init(this->soap);
	DisplayBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
DisplayBindingService *DisplayBindingService::copy()
{	DisplayBindingService *dup = SOAP_NEW_COPY(DisplayBindingService);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

int DisplayBindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int DisplayBindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int DisplayBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int DisplayBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int DisplayBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int DisplayBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void DisplayBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void DisplayBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *DisplayBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void DisplayBindingService::soap_noheader()
{	this->soap->header = NULL;
}

void DisplayBindingService::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, char *wsa__MessageID, wsa__Relationship *wsa__RelatesTo, wsa__EndpointReferenceType *wsa__From, wsa__EndpointReferenceType *wsa__ReplyTo, wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, wsd__AppSequenceType *wsd__AppSequence)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsa__MessageID = wsa__MessageID;
	this->soap->header->wsa__RelatesTo = wsa__RelatesTo;
	this->soap->header->wsa__From = wsa__From;
	this->soap->header->wsa__ReplyTo = wsa__ReplyTo;
	this->soap->header->wsa__FaultTo = wsa__FaultTo;
	this->soap->header->wsa__To = wsa__To;
	this->soap->header->wsa__Action = wsa__Action;
	this->soap->header->wsd__AppSequence = wsd__AppSequence;
}

const SOAP_ENV__Header *DisplayBindingService::soap_header()
{	return this->soap->header;
}

int DisplayBindingService::run(int port)
{	if (soap_valid_socket(this->soap->master) || soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()) || serve())
				return this->soap->error;
			soap_destroy(this->soap);
			soap_end(this->soap);
		}
	}
	else
		return this->soap->error;
	return SOAP_OK;
}

SOAP_SOCKET DisplayBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET DisplayBindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int DisplayBindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif

int DisplayBindingService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->soap->max_keep_alive;
#endif
	do
	{

#ifndef WITH_FASTCGI
		if (this->soap->max_keep_alive > 0 && !--k)
			this->soap->keep_alive = 0;
#endif

		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if (dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___tls__GetServiceCapabilities(DisplayBindingService*);
static int serve___tls__GetLayout(DisplayBindingService*);
static int serve___tls__SetLayout(DisplayBindingService*);
static int serve___tls__GetDisplayOptions(DisplayBindingService*);
static int serve___tls__GetPaneConfigurations(DisplayBindingService*);
static int serve___tls__GetPaneConfiguration(DisplayBindingService*);
static int serve___tls__SetPaneConfigurations(DisplayBindingService*);
static int serve___tls__SetPaneConfiguration(DisplayBindingService*);
static int serve___tls__CreatePaneConfiguration(DisplayBindingService*);
static int serve___tls__DeletePaneConfiguration(DisplayBindingService*);

int DisplayBindingService::dispatch()
{	DisplayBindingService_init(this->soap->imode, this->soap->omode);
	soap_peek_element(this->soap);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tls:GetServiceCapabilities")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/display/wsdl/GetServiceCapabilities")))
		return serve___tls__GetServiceCapabilities(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tls:GetLayout")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/display/wsdl/GetLayout")))
		return serve___tls__GetLayout(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tls:SetLayout")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/display/wsdl/SetLayout")))
		return serve___tls__SetLayout(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tls:GetDisplayOptions")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/display/wsdl/GetDisplayOptions")))
		return serve___tls__GetDisplayOptions(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tls:GetPaneConfigurations")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurations")))
		return serve___tls__GetPaneConfigurations(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tls:GetPaneConfiguration")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/display/wsdl/GetPaneConfiguration")))
		return serve___tls__GetPaneConfiguration(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tls:SetPaneConfigurations")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurations")))
		return serve___tls__SetPaneConfigurations(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tls:SetPaneConfiguration")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/display/wsdl/SetPaneConfiguration")))
		return serve___tls__SetPaneConfiguration(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tls:CreatePaneConfiguration")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/display/wsdl/CreatePaneConfiguration")))
		return serve___tls__CreatePaneConfiguration(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tls:DeletePaneConfiguration")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/display/wsdl/DeletePaneConfiguration")))
		return serve___tls__DeletePaneConfiguration(this);
	return this->soap->error = SOAP_NO_METHOD;
}

static int serve___tls__GetServiceCapabilities(DisplayBindingService *service)
{	struct soap *soap = service->soap;
	struct __tls__GetServiceCapabilities soap_tmp___tls__GetServiceCapabilities;
	_tls__GetServiceCapabilitiesResponse tls__GetServiceCapabilitiesResponse;
	tls__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___tls__GetServiceCapabilities(soap, &soap_tmp___tls__GetServiceCapabilities);
	soap->encodingStyle = NULL;
	if (!soap_get___tls__GetServiceCapabilities(soap, &soap_tmp___tls__GetServiceCapabilities, "-tls:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetServiceCapabilities(soap_tmp___tls__GetServiceCapabilities.tls__GetServiceCapabilities, &tls__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tls__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tls__GetServiceCapabilitiesResponse.soap_put(soap, "tls:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tls__GetServiceCapabilitiesResponse.soap_put(soap, "tls:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tls__GetLayout(DisplayBindingService *service)
{	struct soap *soap = service->soap;
	struct __tls__GetLayout soap_tmp___tls__GetLayout;
	_tls__GetLayoutResponse tls__GetLayoutResponse;
	tls__GetLayoutResponse.soap_default(soap);
	soap_default___tls__GetLayout(soap, &soap_tmp___tls__GetLayout);
	soap->encodingStyle = NULL;
	if (!soap_get___tls__GetLayout(soap, &soap_tmp___tls__GetLayout, "-tls:GetLayout", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetLayout(soap_tmp___tls__GetLayout.tls__GetLayout, &tls__GetLayoutResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tls__GetLayoutResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tls__GetLayoutResponse.soap_put(soap, "tls:GetLayoutResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tls__GetLayoutResponse.soap_put(soap, "tls:GetLayoutResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tls__SetLayout(DisplayBindingService *service)
{	struct soap *soap = service->soap;
	struct __tls__SetLayout soap_tmp___tls__SetLayout;
	_tls__SetLayoutResponse tls__SetLayoutResponse;
	tls__SetLayoutResponse.soap_default(soap);
	soap_default___tls__SetLayout(soap, &soap_tmp___tls__SetLayout);
	soap->encodingStyle = NULL;
	if (!soap_get___tls__SetLayout(soap, &soap_tmp___tls__SetLayout, "-tls:SetLayout", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetLayout(soap_tmp___tls__SetLayout.tls__SetLayout, &tls__SetLayoutResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tls__SetLayoutResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tls__SetLayoutResponse.soap_put(soap, "tls:SetLayoutResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tls__SetLayoutResponse.soap_put(soap, "tls:SetLayoutResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tls__GetDisplayOptions(DisplayBindingService *service)
{	struct soap *soap = service->soap;
	struct __tls__GetDisplayOptions soap_tmp___tls__GetDisplayOptions;
	_tls__GetDisplayOptionsResponse tls__GetDisplayOptionsResponse;
	tls__GetDisplayOptionsResponse.soap_default(soap);
	soap_default___tls__GetDisplayOptions(soap, &soap_tmp___tls__GetDisplayOptions);
	soap->encodingStyle = NULL;
	if (!soap_get___tls__GetDisplayOptions(soap, &soap_tmp___tls__GetDisplayOptions, "-tls:GetDisplayOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetDisplayOptions(soap_tmp___tls__GetDisplayOptions.tls__GetDisplayOptions, &tls__GetDisplayOptionsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tls__GetDisplayOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tls__GetDisplayOptionsResponse.soap_put(soap, "tls:GetDisplayOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tls__GetDisplayOptionsResponse.soap_put(soap, "tls:GetDisplayOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tls__GetPaneConfigurations(DisplayBindingService *service)
{	struct soap *soap = service->soap;
	struct __tls__GetPaneConfigurations soap_tmp___tls__GetPaneConfigurations;
	_tls__GetPaneConfigurationsResponse tls__GetPaneConfigurationsResponse;
	tls__GetPaneConfigurationsResponse.soap_default(soap);
	soap_default___tls__GetPaneConfigurations(soap, &soap_tmp___tls__GetPaneConfigurations);
	soap->encodingStyle = NULL;
	if (!soap_get___tls__GetPaneConfigurations(soap, &soap_tmp___tls__GetPaneConfigurations, "-tls:GetPaneConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetPaneConfigurations(soap_tmp___tls__GetPaneConfigurations.tls__GetPaneConfigurations, &tls__GetPaneConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tls__GetPaneConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tls__GetPaneConfigurationsResponse.soap_put(soap, "tls:GetPaneConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tls__GetPaneConfigurationsResponse.soap_put(soap, "tls:GetPaneConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tls__GetPaneConfiguration(DisplayBindingService *service)
{	struct soap *soap = service->soap;
	struct __tls__GetPaneConfiguration soap_tmp___tls__GetPaneConfiguration;
	_tls__GetPaneConfigurationResponse tls__GetPaneConfigurationResponse;
	tls__GetPaneConfigurationResponse.soap_default(soap);
	soap_default___tls__GetPaneConfiguration(soap, &soap_tmp___tls__GetPaneConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___tls__GetPaneConfiguration(soap, &soap_tmp___tls__GetPaneConfiguration, "-tls:GetPaneConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetPaneConfiguration(soap_tmp___tls__GetPaneConfiguration.tls__GetPaneConfiguration, &tls__GetPaneConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tls__GetPaneConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tls__GetPaneConfigurationResponse.soap_put(soap, "tls:GetPaneConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tls__GetPaneConfigurationResponse.soap_put(soap, "tls:GetPaneConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tls__SetPaneConfigurations(DisplayBindingService *service)
{	struct soap *soap = service->soap;
	struct __tls__SetPaneConfigurations soap_tmp___tls__SetPaneConfigurations;
	_tls__SetPaneConfigurationsResponse tls__SetPaneConfigurationsResponse;
	tls__SetPaneConfigurationsResponse.soap_default(soap);
	soap_default___tls__SetPaneConfigurations(soap, &soap_tmp___tls__SetPaneConfigurations);
	soap->encodingStyle = NULL;
	if (!soap_get___tls__SetPaneConfigurations(soap, &soap_tmp___tls__SetPaneConfigurations, "-tls:SetPaneConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetPaneConfigurations(soap_tmp___tls__SetPaneConfigurations.tls__SetPaneConfigurations, &tls__SetPaneConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tls__SetPaneConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tls__SetPaneConfigurationsResponse.soap_put(soap, "tls:SetPaneConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tls__SetPaneConfigurationsResponse.soap_put(soap, "tls:SetPaneConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tls__SetPaneConfiguration(DisplayBindingService *service)
{	struct soap *soap = service->soap;
	struct __tls__SetPaneConfiguration soap_tmp___tls__SetPaneConfiguration;
	_tls__SetPaneConfigurationResponse tls__SetPaneConfigurationResponse;
	tls__SetPaneConfigurationResponse.soap_default(soap);
	soap_default___tls__SetPaneConfiguration(soap, &soap_tmp___tls__SetPaneConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___tls__SetPaneConfiguration(soap, &soap_tmp___tls__SetPaneConfiguration, "-tls:SetPaneConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetPaneConfiguration(soap_tmp___tls__SetPaneConfiguration.tls__SetPaneConfiguration, &tls__SetPaneConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tls__SetPaneConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tls__SetPaneConfigurationResponse.soap_put(soap, "tls:SetPaneConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tls__SetPaneConfigurationResponse.soap_put(soap, "tls:SetPaneConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tls__CreatePaneConfiguration(DisplayBindingService *service)
{	struct soap *soap = service->soap;
	struct __tls__CreatePaneConfiguration soap_tmp___tls__CreatePaneConfiguration;
	_tls__CreatePaneConfigurationResponse tls__CreatePaneConfigurationResponse;
	tls__CreatePaneConfigurationResponse.soap_default(soap);
	soap_default___tls__CreatePaneConfiguration(soap, &soap_tmp___tls__CreatePaneConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___tls__CreatePaneConfiguration(soap, &soap_tmp___tls__CreatePaneConfiguration, "-tls:CreatePaneConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreatePaneConfiguration(soap_tmp___tls__CreatePaneConfiguration.tls__CreatePaneConfiguration, &tls__CreatePaneConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tls__CreatePaneConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tls__CreatePaneConfigurationResponse.soap_put(soap, "tls:CreatePaneConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tls__CreatePaneConfigurationResponse.soap_put(soap, "tls:CreatePaneConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tls__DeletePaneConfiguration(DisplayBindingService *service)
{	struct soap *soap = service->soap;
	struct __tls__DeletePaneConfiguration soap_tmp___tls__DeletePaneConfiguration;
	_tls__DeletePaneConfigurationResponse tls__DeletePaneConfigurationResponse;
	tls__DeletePaneConfigurationResponse.soap_default(soap);
	soap_default___tls__DeletePaneConfiguration(soap, &soap_tmp___tls__DeletePaneConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___tls__DeletePaneConfiguration(soap, &soap_tmp___tls__DeletePaneConfiguration, "-tls:DeletePaneConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeletePaneConfiguration(soap_tmp___tls__DeletePaneConfiguration.tls__DeletePaneConfiguration, &tls__DeletePaneConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tls__DeletePaneConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tls__DeletePaneConfigurationResponse.soap_put(soap, "tls:DeletePaneConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tls__DeletePaneConfigurationResponse.soap_put(soap, "tls:DeletePaneConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
