/* WebDeviceIOBindingService.cpp
   Generated by gSOAP 2.8.15 from web.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "WebDeviceIOBindingService.h"

DeviceIOBindingService::DeviceIOBindingService()
{	this->soap = soap_new();
	this->own = true;
	DeviceIOBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

DeviceIOBindingService::DeviceIOBindingService(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	DeviceIOBindingService_init(_soap->imode, _soap->omode);
}

DeviceIOBindingService::DeviceIOBindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	DeviceIOBindingService_init(iomode, iomode);
}

DeviceIOBindingService::DeviceIOBindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	DeviceIOBindingService_init(imode, omode);
}

DeviceIOBindingService::~DeviceIOBindingService()
{	if (this->own)
		soap_free(this->soap);
}

void DeviceIOBindingService::DeviceIOBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"xmime", "http://www.w3.org/2005/05/xmlmime", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"dn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
	{"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
	{"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
	{"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
	{"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
	{"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
	{"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
	{"wsa", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL, NULL},
	{"wsd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
};

void DeviceIOBindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void DeviceIOBindingService::reset()
{	destroy();
	soap_done(this->soap);
	soap_init(this->soap);
	DeviceIOBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
DeviceIOBindingService *DeviceIOBindingService::copy()
{	DeviceIOBindingService *dup = SOAP_NEW_COPY(DeviceIOBindingService);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

int DeviceIOBindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int DeviceIOBindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int DeviceIOBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int DeviceIOBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int DeviceIOBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int DeviceIOBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void DeviceIOBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void DeviceIOBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *DeviceIOBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void DeviceIOBindingService::soap_noheader()
{	this->soap->header = NULL;
}

void DeviceIOBindingService::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, char *wsa__MessageID, wsa__Relationship *wsa__RelatesTo, wsa__EndpointReferenceType *wsa__From, wsa__EndpointReferenceType *wsa__ReplyTo, wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, wsd__AppSequenceType *wsd__AppSequence)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsa__MessageID = wsa__MessageID;
	this->soap->header->wsa__RelatesTo = wsa__RelatesTo;
	this->soap->header->wsa__From = wsa__From;
	this->soap->header->wsa__ReplyTo = wsa__ReplyTo;
	this->soap->header->wsa__FaultTo = wsa__FaultTo;
	this->soap->header->wsa__To = wsa__To;
	this->soap->header->wsa__Action = wsa__Action;
	this->soap->header->wsd__AppSequence = wsd__AppSequence;
}

const SOAP_ENV__Header *DeviceIOBindingService::soap_header()
{	return this->soap->header;
}

int DeviceIOBindingService::run(int port)
{	if (soap_valid_socket(this->soap->master) || soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()) || serve())
				return this->soap->error;
			soap_destroy(this->soap);
			soap_end(this->soap);
		}
	}
	else
		return this->soap->error;
	return SOAP_OK;
}

SOAP_SOCKET DeviceIOBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET DeviceIOBindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int DeviceIOBindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif

int DeviceIOBindingService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->soap->max_keep_alive;
#endif
	do
	{

#ifndef WITH_FASTCGI
		if (this->soap->max_keep_alive > 0 && !--k)
			this->soap->keep_alive = 0;
#endif

		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if (dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___tmd__GetServiceCapabilities(DeviceIOBindingService*);
static int serve___tmd__GetRelayOutputOptions(DeviceIOBindingService*);
static int serve___tmd__GetAudioSources(DeviceIOBindingService*);
static int serve___tmd__GetAudioOutputs(DeviceIOBindingService*);
static int serve___tmd__GetVideoSources(DeviceIOBindingService*);
static int serve___tmd__GetVideoOutputs(DeviceIOBindingService*);
static int serve___tmd__GetVideoSourceConfiguration(DeviceIOBindingService*);
static int serve___tmd__GetVideoOutputConfiguration(DeviceIOBindingService*);
static int serve___tmd__GetAudioSourceConfiguration(DeviceIOBindingService*);
static int serve___tmd__GetAudioOutputConfiguration(DeviceIOBindingService*);
static int serve___tmd__SetVideoSourceConfiguration(DeviceIOBindingService*);
static int serve___tmd__SetVideoOutputConfiguration(DeviceIOBindingService*);
static int serve___tmd__SetAudioSourceConfiguration(DeviceIOBindingService*);
static int serve___tmd__SetAudioOutputConfiguration(DeviceIOBindingService*);
static int serve___tmd__GetVideoSourceConfigurationOptions(DeviceIOBindingService*);
static int serve___tmd__GetVideoOutputConfigurationOptions(DeviceIOBindingService*);
static int serve___tmd__GetAudioSourceConfigurationOptions(DeviceIOBindingService*);
static int serve___tmd__GetAudioOutputConfigurationOptions(DeviceIOBindingService*);
static int serve___tmd__GetRelayOutputs(DeviceIOBindingService*);
static int serve___tmd__SetRelayOutputSettings(DeviceIOBindingService*);
static int serve___tmd__SetRelayOutputState(DeviceIOBindingService*);
static int serve___tmd__GetDigitalInputs(DeviceIOBindingService*);
static int serve___tmd__GetSerialPorts(DeviceIOBindingService*);
static int serve___tmd__GetSerialPortConfiguration(DeviceIOBindingService*);
static int serve___tmd__SetSerialPortConfiguration(DeviceIOBindingService*);
static int serve___tmd__GetSerialPortConfigurationOptions(DeviceIOBindingService*);
static int serve___tmd__SendReceiveSerialCommand(DeviceIOBindingService*);

int DeviceIOBindingService::dispatch()
{	DeviceIOBindingService_init(this->soap->imode, this->soap->omode);
	soap_peek_element(this->soap);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetServiceCapabilities")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities")))
		return serve___tmd__GetServiceCapabilities(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetRelayOutputOptions")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions")))
		return serve___tmd__GetRelayOutputOptions(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "trt:GetAudioSources")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources")))
		return serve___tmd__GetAudioSources(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "trt:GetAudioOutputs")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs")))
		return serve___tmd__GetAudioOutputs(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "trt:GetVideoSources")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources")))
		return serve___tmd__GetVideoSources(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetVideoOutputs")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs")))
		return serve___tmd__GetVideoOutputs(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetVideoSourceConfiguration")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration")))
		return serve___tmd__GetVideoSourceConfiguration(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetVideoOutputConfiguration")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration")))
		return serve___tmd__GetVideoOutputConfiguration(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetAudioSourceConfiguration")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration")))
		return serve___tmd__GetAudioSourceConfiguration(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetAudioOutputConfiguration")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration")))
		return serve___tmd__GetAudioOutputConfiguration(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:SetVideoSourceConfiguration")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration")))
		return serve___tmd__SetVideoSourceConfiguration(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:SetVideoOutputConfiguration")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration")))
		return serve___tmd__SetVideoOutputConfiguration(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:SetAudioSourceConfiguration")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration")))
		return serve___tmd__SetAudioSourceConfiguration(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:SetAudioOutputConfiguration")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration")))
		return serve___tmd__SetAudioOutputConfiguration(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetVideoSourceConfigurationOptions")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions")))
		return serve___tmd__GetVideoSourceConfigurationOptions(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetVideoOutputConfigurationOptions")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions")))
		return serve___tmd__GetVideoOutputConfigurationOptions(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetAudioSourceConfigurationOptions")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions")))
		return serve___tmd__GetAudioSourceConfigurationOptions(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetAudioOutputConfigurationOptions")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions")))
		return serve___tmd__GetAudioOutputConfigurationOptions(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tds:GetRelayOutputs")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs")))
		return serve___tmd__GetRelayOutputs(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:SetRelayOutputSettings")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings")))
		return serve___tmd__SetRelayOutputSettings(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tds:SetRelayOutputState")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState")))
		return serve___tmd__SetRelayOutputState(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetDigitalInputs")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs")))
		return serve___tmd__GetDigitalInputs(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetSerialPorts")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts")))
		return serve___tmd__GetSerialPorts(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetSerialPortConfiguration")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations")))
		return serve___tmd__GetSerialPortConfiguration(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:SetSerialPortConfiguration")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration")))
		return serve___tmd__SetSerialPortConfiguration(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:GetSerialPortConfigurationOptions")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions")))
		return serve___tmd__GetSerialPortConfigurationOptions(this);
	if ((!this->soap->action && !soap_match_tag(this->soap, this->soap->tag, "tmd:SendReceiveSerialCommand")) || (this->soap->action && !strcmp(this->soap->action, "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand")))
		return serve___tmd__SendReceiveSerialCommand(this);
	return this->soap->error = SOAP_NO_METHOD;
}

static int serve___tmd__GetServiceCapabilities(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetServiceCapabilities soap_tmp___tmd__GetServiceCapabilities;
	_tmd__GetServiceCapabilitiesResponse tmd__GetServiceCapabilitiesResponse;
	tmd__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___tmd__GetServiceCapabilities(soap, &soap_tmp___tmd__GetServiceCapabilities);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetServiceCapabilities(soap, &soap_tmp___tmd__GetServiceCapabilities, "-tmd:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetServiceCapabilities(soap_tmp___tmd__GetServiceCapabilities.tmd__GetServiceCapabilities, &tmd__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetServiceCapabilitiesResponse.soap_put(soap, "tmd:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetServiceCapabilitiesResponse.soap_put(soap, "tmd:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetRelayOutputOptions(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetRelayOutputOptions soap_tmp___tmd__GetRelayOutputOptions;
	_tmd__GetRelayOutputOptionsResponse tmd__GetRelayOutputOptionsResponse;
	tmd__GetRelayOutputOptionsResponse.soap_default(soap);
	soap_default___tmd__GetRelayOutputOptions(soap, &soap_tmp___tmd__GetRelayOutputOptions);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetRelayOutputOptions(soap, &soap_tmp___tmd__GetRelayOutputOptions, "-tmd:GetRelayOutputOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetRelayOutputOptions(soap_tmp___tmd__GetRelayOutputOptions.tmd__GetRelayOutputOptions, &tmd__GetRelayOutputOptionsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetRelayOutputOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetRelayOutputOptionsResponse.soap_put(soap, "tmd:GetRelayOutputOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetRelayOutputOptionsResponse.soap_put(soap, "tmd:GetRelayOutputOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetAudioSources(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetAudioSources soap_tmp___tmd__GetAudioSources;
	_trt__GetAudioSourcesResponse trt__GetAudioSourcesResponse;
	trt__GetAudioSourcesResponse.soap_default(soap);
	soap_default___tmd__GetAudioSources(soap, &soap_tmp___tmd__GetAudioSources);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetAudioSources(soap, &soap_tmp___tmd__GetAudioSources, "-tmd:GetAudioSources", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSources(soap_tmp___tmd__GetAudioSources.trt__GetAudioSources, &trt__GetAudioSourcesResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	trt__GetAudioSourcesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioSourcesResponse.soap_put(soap, "trt:GetAudioSourcesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioSourcesResponse.soap_put(soap, "trt:GetAudioSourcesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetAudioOutputs(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetAudioOutputs soap_tmp___tmd__GetAudioOutputs;
	_trt__GetAudioOutputsResponse trt__GetAudioOutputsResponse;
	trt__GetAudioOutputsResponse.soap_default(soap);
	soap_default___tmd__GetAudioOutputs(soap, &soap_tmp___tmd__GetAudioOutputs);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetAudioOutputs(soap, &soap_tmp___tmd__GetAudioOutputs, "-tmd:GetAudioOutputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputs(soap_tmp___tmd__GetAudioOutputs.trt__GetAudioOutputs, &trt__GetAudioOutputsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	trt__GetAudioOutputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioOutputsResponse.soap_put(soap, "trt:GetAudioOutputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioOutputsResponse.soap_put(soap, "trt:GetAudioOutputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetVideoSources(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetVideoSources soap_tmp___tmd__GetVideoSources;
	_trt__GetVideoSourcesResponse trt__GetVideoSourcesResponse;
	trt__GetVideoSourcesResponse.soap_default(soap);
	soap_default___tmd__GetVideoSources(soap, &soap_tmp___tmd__GetVideoSources);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetVideoSources(soap, &soap_tmp___tmd__GetVideoSources, "-tmd:GetVideoSources", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSources(soap_tmp___tmd__GetVideoSources.trt__GetVideoSources, &trt__GetVideoSourcesResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	trt__GetVideoSourcesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetVideoSourcesResponse.soap_put(soap, "trt:GetVideoSourcesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetVideoSourcesResponse.soap_put(soap, "trt:GetVideoSourcesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetVideoOutputs(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetVideoOutputs soap_tmp___tmd__GetVideoOutputs;
	_tmd__GetVideoOutputsResponse tmd__GetVideoOutputsResponse;
	tmd__GetVideoOutputsResponse.soap_default(soap);
	soap_default___tmd__GetVideoOutputs(soap, &soap_tmp___tmd__GetVideoOutputs);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetVideoOutputs(soap, &soap_tmp___tmd__GetVideoOutputs, "-tmd:GetVideoOutputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoOutputs(soap_tmp___tmd__GetVideoOutputs.tmd__GetVideoOutputs, &tmd__GetVideoOutputsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetVideoOutputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetVideoOutputsResponse.soap_put(soap, "tmd:GetVideoOutputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetVideoOutputsResponse.soap_put(soap, "tmd:GetVideoOutputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetVideoSourceConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetVideoSourceConfiguration soap_tmp___tmd__GetVideoSourceConfiguration;
	_tmd__GetVideoSourceConfigurationResponse tmd__GetVideoSourceConfigurationResponse;
	tmd__GetVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___tmd__GetVideoSourceConfiguration(soap, &soap_tmp___tmd__GetVideoSourceConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetVideoSourceConfiguration(soap, &soap_tmp___tmd__GetVideoSourceConfiguration, "-tmd:GetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfiguration(soap_tmp___tmd__GetVideoSourceConfiguration.tmd__GetVideoSourceConfiguration, &tmd__GetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetVideoSourceConfigurationResponse.soap_put(soap, "tmd:GetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetVideoSourceConfigurationResponse.soap_put(soap, "tmd:GetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetVideoOutputConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetVideoOutputConfiguration soap_tmp___tmd__GetVideoOutputConfiguration;
	_tmd__GetVideoOutputConfigurationResponse tmd__GetVideoOutputConfigurationResponse;
	tmd__GetVideoOutputConfigurationResponse.soap_default(soap);
	soap_default___tmd__GetVideoOutputConfiguration(soap, &soap_tmp___tmd__GetVideoOutputConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetVideoOutputConfiguration(soap, &soap_tmp___tmd__GetVideoOutputConfiguration, "-tmd:GetVideoOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoOutputConfiguration(soap_tmp___tmd__GetVideoOutputConfiguration.tmd__GetVideoOutputConfiguration, &tmd__GetVideoOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetVideoOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetVideoOutputConfigurationResponse.soap_put(soap, "tmd:GetVideoOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetVideoOutputConfigurationResponse.soap_put(soap, "tmd:GetVideoOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetAudioSourceConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetAudioSourceConfiguration soap_tmp___tmd__GetAudioSourceConfiguration;
	_tmd__GetAudioSourceConfigurationResponse tmd__GetAudioSourceConfigurationResponse;
	tmd__GetAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___tmd__GetAudioSourceConfiguration(soap, &soap_tmp___tmd__GetAudioSourceConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetAudioSourceConfiguration(soap, &soap_tmp___tmd__GetAudioSourceConfiguration, "-tmd:GetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfiguration(soap_tmp___tmd__GetAudioSourceConfiguration.tmd__GetAudioSourceConfiguration, &tmd__GetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetAudioSourceConfigurationResponse.soap_put(soap, "tmd:GetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetAudioSourceConfigurationResponse.soap_put(soap, "tmd:GetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetAudioOutputConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetAudioOutputConfiguration soap_tmp___tmd__GetAudioOutputConfiguration;
	_tmd__GetAudioOutputConfigurationResponse tmd__GetAudioOutputConfigurationResponse;
	tmd__GetAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___tmd__GetAudioOutputConfiguration(soap, &soap_tmp___tmd__GetAudioOutputConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetAudioOutputConfiguration(soap, &soap_tmp___tmd__GetAudioOutputConfiguration, "-tmd:GetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfiguration(soap_tmp___tmd__GetAudioOutputConfiguration.tmd__GetAudioOutputConfiguration, &tmd__GetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetAudioOutputConfigurationResponse.soap_put(soap, "tmd:GetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetAudioOutputConfigurationResponse.soap_put(soap, "tmd:GetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetVideoSourceConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__SetVideoSourceConfiguration soap_tmp___tmd__SetVideoSourceConfiguration;
	_tmd__SetVideoSourceConfigurationResponse tmd__SetVideoSourceConfigurationResponse;
	tmd__SetVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___tmd__SetVideoSourceConfiguration(soap, &soap_tmp___tmd__SetVideoSourceConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__SetVideoSourceConfiguration(soap, &soap_tmp___tmd__SetVideoSourceConfiguration, "-tmd:SetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoSourceConfiguration(soap_tmp___tmd__SetVideoSourceConfiguration.tmd__SetVideoSourceConfiguration, &tmd__SetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__SetVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SetVideoSourceConfigurationResponse.soap_put(soap, "tmd:SetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SetVideoSourceConfigurationResponse.soap_put(soap, "tmd:SetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetVideoOutputConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__SetVideoOutputConfiguration soap_tmp___tmd__SetVideoOutputConfiguration;
	_tmd__SetVideoOutputConfigurationResponse tmd__SetVideoOutputConfigurationResponse;
	tmd__SetVideoOutputConfigurationResponse.soap_default(soap);
	soap_default___tmd__SetVideoOutputConfiguration(soap, &soap_tmp___tmd__SetVideoOutputConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__SetVideoOutputConfiguration(soap, &soap_tmp___tmd__SetVideoOutputConfiguration, "-tmd:SetVideoOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoOutputConfiguration(soap_tmp___tmd__SetVideoOutputConfiguration.tmd__SetVideoOutputConfiguration, &tmd__SetVideoOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__SetVideoOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SetVideoOutputConfigurationResponse.soap_put(soap, "tmd:SetVideoOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SetVideoOutputConfigurationResponse.soap_put(soap, "tmd:SetVideoOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetAudioSourceConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__SetAudioSourceConfiguration soap_tmp___tmd__SetAudioSourceConfiguration;
	_tmd__SetAudioSourceConfigurationResponse tmd__SetAudioSourceConfigurationResponse;
	tmd__SetAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___tmd__SetAudioSourceConfiguration(soap, &soap_tmp___tmd__SetAudioSourceConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__SetAudioSourceConfiguration(soap, &soap_tmp___tmd__SetAudioSourceConfiguration, "-tmd:SetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioSourceConfiguration(soap_tmp___tmd__SetAudioSourceConfiguration.tmd__SetAudioSourceConfiguration, &tmd__SetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__SetAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SetAudioSourceConfigurationResponse.soap_put(soap, "tmd:SetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SetAudioSourceConfigurationResponse.soap_put(soap, "tmd:SetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetAudioOutputConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__SetAudioOutputConfiguration soap_tmp___tmd__SetAudioOutputConfiguration;
	_tmd__SetAudioOutputConfigurationResponse tmd__SetAudioOutputConfigurationResponse;
	tmd__SetAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___tmd__SetAudioOutputConfiguration(soap, &soap_tmp___tmd__SetAudioOutputConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__SetAudioOutputConfiguration(soap, &soap_tmp___tmd__SetAudioOutputConfiguration, "-tmd:SetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioOutputConfiguration(soap_tmp___tmd__SetAudioOutputConfiguration.tmd__SetAudioOutputConfiguration, &tmd__SetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__SetAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SetAudioOutputConfigurationResponse.soap_put(soap, "tmd:SetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SetAudioOutputConfigurationResponse.soap_put(soap, "tmd:SetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetVideoSourceConfigurationOptions(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetVideoSourceConfigurationOptions soap_tmp___tmd__GetVideoSourceConfigurationOptions;
	_tmd__GetVideoSourceConfigurationOptionsResponse tmd__GetVideoSourceConfigurationOptionsResponse;
	tmd__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___tmd__GetVideoSourceConfigurationOptions(soap, &soap_tmp___tmd__GetVideoSourceConfigurationOptions);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetVideoSourceConfigurationOptions(soap, &soap_tmp___tmd__GetVideoSourceConfigurationOptions, "-tmd:GetVideoSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfigurationOptions(soap_tmp___tmd__GetVideoSourceConfigurationOptions.tmd__GetVideoSourceConfigurationOptions, &tmd__GetVideoSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetVideoSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "tmd:GetVideoSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "tmd:GetVideoSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetVideoOutputConfigurationOptions(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetVideoOutputConfigurationOptions soap_tmp___tmd__GetVideoOutputConfigurationOptions;
	_tmd__GetVideoOutputConfigurationOptionsResponse tmd__GetVideoOutputConfigurationOptionsResponse;
	tmd__GetVideoOutputConfigurationOptionsResponse.soap_default(soap);
	soap_default___tmd__GetVideoOutputConfigurationOptions(soap, &soap_tmp___tmd__GetVideoOutputConfigurationOptions);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetVideoOutputConfigurationOptions(soap, &soap_tmp___tmd__GetVideoOutputConfigurationOptions, "-tmd:GetVideoOutputConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoOutputConfigurationOptions(soap_tmp___tmd__GetVideoOutputConfigurationOptions.tmd__GetVideoOutputConfigurationOptions, &tmd__GetVideoOutputConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetVideoOutputConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetVideoOutputConfigurationOptionsResponse.soap_put(soap, "tmd:GetVideoOutputConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetVideoOutputConfigurationOptionsResponse.soap_put(soap, "tmd:GetVideoOutputConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetAudioSourceConfigurationOptions(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetAudioSourceConfigurationOptions soap_tmp___tmd__GetAudioSourceConfigurationOptions;
	_tmd__GetAudioSourceConfigurationOptionsResponse tmd__GetAudioSourceConfigurationOptionsResponse;
	tmd__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___tmd__GetAudioSourceConfigurationOptions(soap, &soap_tmp___tmd__GetAudioSourceConfigurationOptions);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetAudioSourceConfigurationOptions(soap, &soap_tmp___tmd__GetAudioSourceConfigurationOptions, "-tmd:GetAudioSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfigurationOptions(soap_tmp___tmd__GetAudioSourceConfigurationOptions.tmd__GetAudioSourceConfigurationOptions, &tmd__GetAudioSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetAudioSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "tmd:GetAudioSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "tmd:GetAudioSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetAudioOutputConfigurationOptions(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetAudioOutputConfigurationOptions soap_tmp___tmd__GetAudioOutputConfigurationOptions;
	_tmd__GetAudioOutputConfigurationOptionsResponse tmd__GetAudioOutputConfigurationOptionsResponse;
	tmd__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	soap_default___tmd__GetAudioOutputConfigurationOptions(soap, &soap_tmp___tmd__GetAudioOutputConfigurationOptions);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetAudioOutputConfigurationOptions(soap, &soap_tmp___tmd__GetAudioOutputConfigurationOptions, "-tmd:GetAudioOutputConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfigurationOptions(soap_tmp___tmd__GetAudioOutputConfigurationOptions.tmd__GetAudioOutputConfigurationOptions, &tmd__GetAudioOutputConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetAudioOutputConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "tmd:GetAudioOutputConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "tmd:GetAudioOutputConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetRelayOutputs(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetRelayOutputs soap_tmp___tmd__GetRelayOutputs;
	_tds__GetRelayOutputsResponse tds__GetRelayOutputsResponse;
	tds__GetRelayOutputsResponse.soap_default(soap);
	soap_default___tmd__GetRelayOutputs(soap, &soap_tmp___tmd__GetRelayOutputs);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetRelayOutputs(soap, &soap_tmp___tmd__GetRelayOutputs, "-tmd:GetRelayOutputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetRelayOutputs(soap_tmp___tmd__GetRelayOutputs.tds__GetRelayOutputs, &tds__GetRelayOutputsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tds__GetRelayOutputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tds__GetRelayOutputsResponse.soap_put(soap, "tds:GetRelayOutputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tds__GetRelayOutputsResponse.soap_put(soap, "tds:GetRelayOutputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetRelayOutputSettings(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__SetRelayOutputSettings soap_tmp___tmd__SetRelayOutputSettings;
	_tmd__SetRelayOutputSettingsResponse tmd__SetRelayOutputSettingsResponse;
	tmd__SetRelayOutputSettingsResponse.soap_default(soap);
	soap_default___tmd__SetRelayOutputSettings(soap, &soap_tmp___tmd__SetRelayOutputSettings);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__SetRelayOutputSettings(soap, &soap_tmp___tmd__SetRelayOutputSettings, "-tmd:SetRelayOutputSettings", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetRelayOutputSettings(soap_tmp___tmd__SetRelayOutputSettings.tmd__SetRelayOutputSettings, &tmd__SetRelayOutputSettingsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__SetRelayOutputSettingsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SetRelayOutputSettingsResponse.soap_put(soap, "tmd:SetRelayOutputSettingsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SetRelayOutputSettingsResponse.soap_put(soap, "tmd:SetRelayOutputSettingsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetRelayOutputState(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__SetRelayOutputState soap_tmp___tmd__SetRelayOutputState;
	_tds__SetRelayOutputStateResponse tds__SetRelayOutputStateResponse;
	tds__SetRelayOutputStateResponse.soap_default(soap);
	soap_default___tmd__SetRelayOutputState(soap, &soap_tmp___tmd__SetRelayOutputState);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__SetRelayOutputState(soap, &soap_tmp___tmd__SetRelayOutputState, "-tmd:SetRelayOutputState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetRelayOutputState(soap_tmp___tmd__SetRelayOutputState.tds__SetRelayOutputState, &tds__SetRelayOutputStateResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tds__SetRelayOutputStateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tds__SetRelayOutputStateResponse.soap_put(soap, "tds:SetRelayOutputStateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tds__SetRelayOutputStateResponse.soap_put(soap, "tds:SetRelayOutputStateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetDigitalInputs(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetDigitalInputs soap_tmp___tmd__GetDigitalInputs;
	_tmd__GetDigitalInputsResponse tmd__GetDigitalInputsResponse;
	tmd__GetDigitalInputsResponse.soap_default(soap);
	soap_default___tmd__GetDigitalInputs(soap, &soap_tmp___tmd__GetDigitalInputs);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetDigitalInputs(soap, &soap_tmp___tmd__GetDigitalInputs, "-tmd:GetDigitalInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetDigitalInputs(soap_tmp___tmd__GetDigitalInputs.tmd__GetDigitalInputs, &tmd__GetDigitalInputsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetDigitalInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetDigitalInputsResponse.soap_put(soap, "tmd:GetDigitalInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetDigitalInputsResponse.soap_put(soap, "tmd:GetDigitalInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetSerialPorts(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetSerialPorts soap_tmp___tmd__GetSerialPorts;
	_tmd__GetSerialPortsResponse tmd__GetSerialPortsResponse;
	tmd__GetSerialPortsResponse.soap_default(soap);
	soap_default___tmd__GetSerialPorts(soap, &soap_tmp___tmd__GetSerialPorts);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetSerialPorts(soap, &soap_tmp___tmd__GetSerialPorts, "-tmd:GetSerialPorts", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetSerialPorts(soap_tmp___tmd__GetSerialPorts.tmd__GetSerialPorts, &tmd__GetSerialPortsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetSerialPortsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetSerialPortsResponse.soap_put(soap, "tmd:GetSerialPortsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetSerialPortsResponse.soap_put(soap, "tmd:GetSerialPortsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetSerialPortConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetSerialPortConfiguration soap_tmp___tmd__GetSerialPortConfiguration;
	_tmd__GetSerialPortConfigurationResponse tmd__GetSerialPortConfigurationResponse;
	tmd__GetSerialPortConfigurationResponse.soap_default(soap);
	soap_default___tmd__GetSerialPortConfiguration(soap, &soap_tmp___tmd__GetSerialPortConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetSerialPortConfiguration(soap, &soap_tmp___tmd__GetSerialPortConfiguration, "-tmd:GetSerialPortConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetSerialPortConfiguration(soap_tmp___tmd__GetSerialPortConfiguration.tmd__GetSerialPortConfiguration, &tmd__GetSerialPortConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetSerialPortConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetSerialPortConfigurationResponse.soap_put(soap, "tmd:GetSerialPortConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetSerialPortConfigurationResponse.soap_put(soap, "tmd:GetSerialPortConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SetSerialPortConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__SetSerialPortConfiguration soap_tmp___tmd__SetSerialPortConfiguration;
	_tmd__SetSerialPortConfigurationResponse tmd__SetSerialPortConfigurationResponse;
	tmd__SetSerialPortConfigurationResponse.soap_default(soap);
	soap_default___tmd__SetSerialPortConfiguration(soap, &soap_tmp___tmd__SetSerialPortConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__SetSerialPortConfiguration(soap, &soap_tmp___tmd__SetSerialPortConfiguration, "-tmd:SetSerialPortConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetSerialPortConfiguration(soap_tmp___tmd__SetSerialPortConfiguration.tmd__SetSerialPortConfiguration, &tmd__SetSerialPortConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__SetSerialPortConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SetSerialPortConfigurationResponse.soap_put(soap, "tmd:SetSerialPortConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SetSerialPortConfigurationResponse.soap_put(soap, "tmd:SetSerialPortConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__GetSerialPortConfigurationOptions(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__GetSerialPortConfigurationOptions soap_tmp___tmd__GetSerialPortConfigurationOptions;
	_tmd__GetSerialPortConfigurationOptionsResponse tmd__GetSerialPortConfigurationOptionsResponse;
	tmd__GetSerialPortConfigurationOptionsResponse.soap_default(soap);
	soap_default___tmd__GetSerialPortConfigurationOptions(soap, &soap_tmp___tmd__GetSerialPortConfigurationOptions);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__GetSerialPortConfigurationOptions(soap, &soap_tmp___tmd__GetSerialPortConfigurationOptions, "-tmd:GetSerialPortConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetSerialPortConfigurationOptions(soap_tmp___tmd__GetSerialPortConfigurationOptions.tmd__GetSerialPortConfigurationOptions, &tmd__GetSerialPortConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__GetSerialPortConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__GetSerialPortConfigurationOptionsResponse.soap_put(soap, "tmd:GetSerialPortConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__GetSerialPortConfigurationOptionsResponse.soap_put(soap, "tmd:GetSerialPortConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tmd__SendReceiveSerialCommand(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __tmd__SendReceiveSerialCommand soap_tmp___tmd__SendReceiveSerialCommand;
	_tmd__SendReceiveSerialCommandResponse tmd__SendReceiveSerialCommandResponse;
	tmd__SendReceiveSerialCommandResponse.soap_default(soap);
	soap_default___tmd__SendReceiveSerialCommand(soap, &soap_tmp___tmd__SendReceiveSerialCommand);
	soap->encodingStyle = NULL;
	if (!soap_get___tmd__SendReceiveSerialCommand(soap, &soap_tmp___tmd__SendReceiveSerialCommand, "-tmd:SendReceiveSerialCommand", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SendReceiveSerialCommand(soap_tmp___tmd__SendReceiveSerialCommand.tmd__SendReceiveSerialCommand, &tmd__SendReceiveSerialCommandResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	tmd__SendReceiveSerialCommandResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tmd__SendReceiveSerialCommandResponse.soap_put(soap, "tmd:SendReceiveSerialCommandResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tmd__SendReceiveSerialCommandResponse.soap_put(soap, "tmd:SendReceiveSerialCommandResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
